# Cap√≠tulo 3/5 ¬∑ Faltan 3 lecciones
# Teor√≠a de la probabilidad

# *Trabajar con una distribuci√≥n normal*

# En esta lecci√≥n, exploraremos una de las distribuciones m√°s fundamentales en estad√≠stica: la distribuci√≥n normal, a menudo referida como la campana de Gauss.
# Esta distribuci√≥n se manifiesta en diversas situaciones, desde representar la altura de la poblaci√≥n hasta determinar las tasas de falla en equipos.
# Aunque existen otras distribuciones en el mundo real, la normal se destaca por su prevalencia y relevancia te√≥rica.

# Centro y dispersi√≥n de una distribuci√≥n normal
# Una distribuci√≥n normal tiene dos par√°metros clave: la media y la varianza

X‚ÄÑ‚àº‚ÄÑ(Œº,‚ÄÜœÉ^2)

# Esta notaci√≥n se puede leer como: la variable X se distribuye normalmente con una media mu (Œº) y una varianza sigma al cuadrado (œÉ¬≤), es decir, una desviaci√≥n est√°ndar sigma.
# Para una distribuci√≥n normal, el 68% de los puntos de datos se encuentran a una desviaci√≥n est√°ndar (œÉ) de la media, 
# el 95% a dos desviaciones est√°ndar de la media y el 99,7 % a las tres primeras desviaciones est√°ndar de la media. Este concepto se denomina regla de las 3 sigmas.

# A menudo, los par√°metros de distribuci√≥n son conocidos y necesitas encontrar la probabilidad de que ocurra un valor en un intervalo determinado.

# Pregunta
# Supongamos que el n√∫mero de horas que los clientes pasan en el gimnasio cada semana sigue una distribuci√≥n normal con una media de 4 y una desviaci√≥n t√≠pica de 1. 
# ¬øQu√© porcentaje de clientes pasa m√°s de 6 horas a la semana en el gimnasio?
# R. menos del 3%
# El valor "m√°s de 6 horas" es de 2 sigma por encima de la media. Sabemos que el 95% de los valores est√°n dentro del intervalo media +/- 2œÉ. 
# El 5% restante se distribuye uniformemente entre dos intervalos que est√°n fuera del intervalo media +/- 2œÉ. 
# A nosotros solo nos interesa el primer intervalo, que contiene la mitad del 5% restante.

# La siguiente imagen interactiva muestra la distribuci√≥n normal resultante. La media (1 000) est√° en el centro y las otras l√≠neas verticales est√°n espaciadas a intervalos de una desviaci√≥n est√°ndar. 
# Los porcentajes son las probabilidades asociadas a cada intervalo.
# Intenta cambiar los valores de la media (Œº) y la desviaci√≥n est√°ndar (œÉ) para ver c√≥mo se ver√° afectada la distribuci√≥n normal.

# ¬øQu√© ocurre con los intervalos de probabilidad cuando œÉ aumenta? Como puedes ver, se ampl√≠an. 
# Una desviaci√≥n est√°ndar mayor indica un rango mayor en el que puede situarse un valor dado, es decir, ser√° m√°s dif√≠cil saber con certeza donde puede ubicarse.


# *Calcular probabilidades en datos normalmente distribuidos con Python*
# Python puede hacer los c√°lculos por nosotros. Para ello nos hacen falta m√©todos de la librer√≠a SciPy y su m√≥dulo intermedio stats.
# SciPy es una librer√≠a Python gratuita y de c√≥digo abierto que se utiliza para la computaci√≥n cient√≠fica y t√©cnica. 
# Contiene m√≥dulos para optimizaci√≥n, √°lgebra lineal, integraci√≥n, procesamiento de se√±ales e im√°genes y muchos otros prop√≥sitos.
# En esta lecci√≥n examinaremos la funci√≥n stats.norm(), que genera una distribuci√≥n normal con unos par√°metros dados (media y desviaci√≥n est√°ndar). 
# Tambi√©n estudiaremos los m√©todos norm.cdf y norm.ppf, que permiten buscar respuestas a preguntas concretas.
# Veamos estos m√©todos con m√°s detalle. Para ilustrarlo, consideremos el siguiente ejemplo: en la India, los estudiantes mayores de edad gastan una media de 5 000 d√≥lares para aprender una nueva profesi√≥n, 
# con una desviaci√≥n t√≠pica de 1 500 d√≥lares.

# Nombre:       La funci√≥n de distribuci√≥n acumulativa
# Sintaxis:     norm.cdf()
# Explicaci√≥n:  Da la probabilidad de que una variable aleatoria sea menor o igual que un valor determinado
# Ejemplo:      ¬øCu√°l es la probabilidad de que un estudiante pueda aprender una nueva profesi√≥n por menos de 4 000 d√≥lares?

# Nombre:       La funci√≥n de punto porcentual
# Sintaxis:     norm.ppf()
# Explicaci√≥n:  Da el valor de la variable aleatoria que corresponde a una determinada probabilidad
# Ejemplo:      ¬øCu√°l es el coste m√°ximo de la formaci√≥n para el 10% de los estudiantes que gastaron menos dinero en sus estudios?

# Veamos c√≥mo obtener respuestas a estas preguntas utilizando Python.

from scipy import stats as st       # importamos el m√≥dulo stats.

data = st.norm(5000, 1500)      # creamos un objeto con datos distribuidos normalmente con una media de 5 000 y una desviaci√≥n est√°ndar de 1500.
desired_cost = 4000     # creamos una variable para almacenar el coste deseado.
probability = data.cdf(desired_cost)    # calculamos la probabilidad de obtener el valor desired_cost.

print(probability)

# La probabilidad es superior al 25%. ¬°Al menos es posible üòâ!
# Y ahora, a por la segunda pregunta:

from scipy import stats as st       # otra vez empezamos con la importaci√≥n y creaci√≥n de la distribuci√≥n.

data = st.norm(5000, 1500)
target_level = 0.1      # establecemos el valor de la probabilidad. Buscaremos el umbral del coste de los estudios para el 10% de los estudiantes que gastaron menos dinero.
cost = data.ppf(target_level)       # encontramos el importe que no supere los gastos del 10% de estudiantes que gastaron menos dinero.

print(cost)

# Ahora sabemos que ese 10% de estudiantes no gastaron m√°s de 3 077 d√≥lares en su formaci√≥n. ¬°S√≠ que saben ahorrar dinero!

# Pregunta
# La puntuaci√≥n media en el examen del Certificado de an√°lisis de datos es 1000 y la desviaci√≥n est√°ndar es 100. Hay que encontrar la probabilidad de obtener entre 900 y 1 100 puntos en el examen.
# ¬øQu√© c√≥digo se debe utilizar para ello?

st.norm(1000, 100).cdf(1100) - st.norm(1000, 100).cdf(900)

# Para responder a la pregunta, tenemos que calcular la probabilidad de que el valor que buscamos sea inferior a 1 100 y restarle la probabilidad de que sea inferior a 900. 
# Esto es exactamente lo que hace este c√≥digo.


# *Ejercicios*

# Ejercicio 1
# El n√∫mero de visitantes mensuales de una tienda virtual tiene una distribuci√≥n normal con una media de 100 500 y una desviaci√≥n est√°ndar de 3 500.
# Encuentra la probabilidad de que en el pr√≥ximo mes el sitio web del outlet tenga:
#   - menos de 92 000 visitantes;
#   - m√°s de 111 000 visitantes.
# Completa el c√≥digo siguiendo los comentarios y utiliza las sentencias print() del prec√≥digo para mostrar tus resultados.

# C√≥digo
from scipy import stats as st

mu = 100_500 # ¬øcu√°l es la media de la distribuci√≥n?
sigma = 3_500 # ¬øcu√°l es la desviaci√≥n est√°ndar de la distribuci√≥n?

more_threshold = 111_000 # ¬øCu√°l es el l√≠mite superior del n√∫mero de visitantes?
fewer_threshold = 92_000 # ¬øCu√°l es el l√≠mite inferior del n√∫mero de visitantes?

p_more_visitors = 1-st.norm(mu, sigma).cdf(more_threshold) # calcula la probabilidad de que el n√∫mero de visitantes sea superior al umbral superior
p_fewer_visitors = st.norm(mu, sigma).cdf(fewer_threshold) # calcula la probabilidad de que el n√∫mero de visitantes sea inferior al umbral inferior

print(f'Probabilidad de que el n√∫mero de visitantes sea superior a {more_threshold}: {p_more_visitors}')
print(f'Probabilidad de que el n√∫mero de visitantes sea inferior a {fewer_threshold}: {p_fewer_visitors}')

# ¬°Exactamente! Este tipo de predicciones son muy importantes para los equipos de ventas y marketing.


# Ejercicio 2
# Otra tienda online, Fancy Pants, vende productos de regalo a un p√∫blico muy limitado de clientes corporativos. 
# Las ventas semanales en la tienda de conjuntos de ajedrez de lujo fabricados con colmillo de mamut tienen una distribuci√≥n normal con una media de 420 y una desviaci√≥n est√°ndar de 65.
# El equipo de inventario est√° decidiendo cu√°ntos conjuntos pedir. Quieren que la posibilidad de venderlos todos la pr√≥xima semana sea del 90%. ¬øCu√°ntos deben pedir?

# C√≥digo
from scipy import stats as st

mu = 420 # escribe tu c√≥digo aqu√≠: ¬øcu√°l es la media?
sigma = 65 # escribe tu c√≥digo aqu√≠: ¬øcu√°l es la desviaci√≥n est√°ndar?
prob = 0.9 # escribe tu c√≥digo aqu√≠: ¬øcu√°l es la probabilidad requerida de vender todos los art√≠culos?

n_shipment = st.norm(mu, sigma).ppf(1-prob) # escribe tu c√≥digo aqu√≠: ¬øcu√°ntos art√≠culos se deben pedir?

print('Cantidad de art√≠culos a pedir:', int(n_shipment))

# ¬°Bien hecho! Por un lado, si compras demasiado inventario, el negocio puede fracasar. Por otro lado, si compras muy poco, no maximizar√°s los ingresos.


# Ejercicio 3
# Los precios de los pedidos realizados en una tienda virtual tienen una distribuci√≥n normal con una media de 24 d√≥lares y una desviaci√≥n est√°ndar de 3.20 d√≥lares.
# Algunos clientes eligen la entrega r√°pida por mensajer√≠a, que tiene un precio fijo independientemente del valor del pedido.
# Los clientes tienden a molestarse cuando el costo de la entrega es igual al costo del pedido. 
# ¬øCu√°nto deber√≠a costar el env√≠o por mensajer√≠a para que no supere el precio del pedido en el 75% de los casos?

# C√≥digo
from scipy import stats as st

mu = 24 # coloca tu c√≥digo aqu√≠: ¬øcu√°l es la media de la distribuci√≥n?
sigma = 3.20 # coloca tu c√≥digo aqu√≠: ¬øcu√°l es la desviaci√≥n est√°ndar de la distribuci√≥n?
threshold = 0.75 # coloca tu c√≥digo aqu√≠: ¬øqu√© porcentaje de pedidos deber√≠a costar m√°s del doble del costo de env√≠o?

max_delivery_price = st.norm(mu, sigma).ppf(1-threshold) # coloca tu c√≥digo aqu√≠: el costo m√°ximo de env√≠o

print('Costo m√°ximo de env√≠o por mensajer√≠a:', max_delivery_price)

# ¬°Ya est√°! Si la entrega cuesta 21.84 d√≥lares, el 75% de los clientes estar√°n satisfechos.

# FIN.